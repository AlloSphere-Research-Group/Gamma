#=========================================================================
# Gamma make configuration
#=========================================================================

#=========================================================================
# Command-line options
# Modify for your system -or- use command-line argument OPTION=string
#=========================================================================
PLATFORM	= macosx
#PLATFORM	= linux

BUILD_CONFIG	= release
#BUILD_CONFIG	= debug

STRICT_WARNINGS = 1


#=========================================================================
# Customize to fit your system
#=========================================================================
PREFIX     = /usr/local
CONFPREFIX = $(PREFIX)/etc
MANPREFIX  = $(PREFIX)/share/man

LIBS       =	-L$(PREFIX)/lib -L/usr/lib
CFLAGS     =	-I$(PREFIX)/include -I/usr/include \
		-Wall \
		-D__STDC_CONSTANT_MACROS
#		-fPIC \

LFLAGS     = $(LIBS) -lm -lsndfile -lportaudio
DLIBFLAGS := -Wl,-single_module

#-------------------------------------------------------------------------
# Default variables (may be overridden in platform specific section)
#-------------------------------------------------------------------------
AR		= ar cr
CC		= g++
INSTALL		= install
RANLIB		= ranlib
LIB_NAME	= gamma

BUILD_DIR	= build
SRC_DIR		= src
TEST_DIR	= tests
TUT_DIR		= tutorial

SLIB_EXT	= a
DLIB_EXT	= so
DLIB_OPT	= shared


#=========================================================================
# DO NOT EDIT BELOW!
#=========================================================================
#-------------------------------------------------------------------------
# Compilation flags
#-------------------------------------------------------------------------
INC_DIRS = ./

ifeq ($(BUILD_CONFIG), release)
	CFLAGS += -O3 -fpeel-loops
else
endif

ifneq ($(STRICT_WARNINGS), 0)
	CFLAGS += \
		-Wreturn-type -Wnon-virtual-dtor -Woverloaded-virtual \
		-Wformat -Wmissing-braces -Wparentheses -Wswitch \
		-Wunused-variable -Wsign-compare -Wno-unknown-pragmas
endif

#-------------------------------------------------------------------------
# Platform specific flags
#-------------------------------------------------------------------------
ifeq ($(PLATFORM), linux)
	LFLAGS    += -lrt -lasound -lpthread # -ljack
	CFLAGS    += -D__LINUX__
endif

ifeq ($(PLATFORM), macosx)
	LFLAGS    += -framework AudioUnit -framework AudioToolbox \
	             -framework CoreAudio -framework Carbon
	CFLAGS	  += -isysroot /Developer/SDKs/MacOSX10.5.sdk -mmacosx-version-min=10.5 
	DLIB_EXT   = dylib
	DLIB_OPT   = dynamiclib
endif

ifeq ($(PLATFORM), windows)
endif

#-------------------------------------------------------------------------
# Define dependent variables
#-------------------------------------------------------------------------
SLIB_FILE  = lib$(LIB_NAME).$(SLIB_EXT)
DLIB_FILE  = lib$(LIB_NAME).$(DLIB_EXT)
DLIBFLAGS := -$(SLIB_OPT) $(DLIBFLAGS)
#             -install_name @executable_path/$(DLIB_FILE)
BIN_DIR	= $(BUILD_DIR)/$(BUILD_CONFIG)
OBJ_DIR	= $(BIN_DIR)/obj

VPATH	= $(SRC_DIR)/ $(addprefix $(SRC_DIR)/, $(TEST_DIR) $(TUT_DIR))
